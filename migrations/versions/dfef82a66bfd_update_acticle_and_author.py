"""update acticle and author

Revision ID: dfef82a66bfd
Revises: 666764a1aa5c
Create Date: 2023-03-08 16:01:02.701837

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dfef82a66bfd'
down_revision = '666764a1aa5c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('dt_created', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('dt_updated', sa.DateTime(), nullable=True))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('text',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
        batch_op.create_foreign_key('articles-author', 'author', ['author_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.drop_constraint('articles-author', type_='foreignkey')
        batch_op.alter_column('text',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('dt_updated')
        batch_op.drop_column('dt_created')

    # ### end Alembic commands ###
